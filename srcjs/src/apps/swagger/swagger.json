{"swagger":"2.0","info":{"title":"FlexSearchAPI","version":"1.0"},"host":"localhost:9800","paths":{"/analyzers/{id}/analyze":{"post":{"tags":["analyzer"],"summary":"Analyse input next","description":"This endpoint is useful to understand the effect of a particular analyser on\nthe input text. You can use the service with both custom and built-in analysers.\nThe returned response contains the tokenised input.\n","operationId":"AnalyzeText","parameters":[{"in":"body","schema":{"properties":{"Text":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"memberRequest to analyze a text against an analyzer. The reason to force\nmemberthis parameter to request body is to avoid escaping of restricted characters\nmemberin the uri.\nmemberThis is helpful during analyzer testing.\n","default":{"Text":""}},"name":"AnalysisRequest","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"String[]","schema":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]}}}}},"/analyzers/{id}":{"get":{"tags":["analyzer"],"summary":"Returns an analyser by ID","description":"","operationId":"GetAnalyzerById","parameters":[{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Analyzer","schema":{"properties":{"AnalyzerName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Tokenizer":{"properties":{"TokenizerName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Parameters":{"properties":{},"required":[],"allOf":[],"description":"Parameters required by the filter.\n","default":{}}},"required":[],"allOf":[],"description":"","default":{"TokenizerName":"standard","Parameters":{}}},"Filters":{"properties":{},"required":[],"allOf":[],"description":"memberDocuments which are returned as a part of search response.\n","default":[]}},"required":[],"allOf":[],"description":"An analyzer examines the text of fields and generates a token stream.\n","default":{"AnalyzerName":"","Tokenizer":{"TokenizerName":"standard","Parameters":{}},"Filters":[]}}}}},"put":{"tags":["analyzer"],"summary":"Create or update an analyser","description":"","operationId":"CreateOrUpdateAnalyzerById","parameters":[{"in":"body","schema":{"properties":{"AnalyzerName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Tokenizer":{"properties":{"TokenizerName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Parameters":{"properties":{},"required":[],"allOf":[],"description":"Parameters required by the filter.\n","default":{}}},"required":[],"allOf":[],"description":"","default":{"TokenizerName":"standard","Parameters":{}}},"Filters":{"properties":{},"required":[],"allOf":[],"description":"memberDocuments which are returned as a part of search response.\n","default":[]}},"required":[],"allOf":[],"description":"An analyzer examines the text of fields and generates a token stream.\n","default":{"AnalyzerName":"","Tokenizer":{"TokenizerName":"standard","Parameters":{}},"Filters":[]}},"name":"Analyzer","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}},"delete":{"tags":["analyzer"],"summary":"Deletes an analyser by ID","description":"","operationId":"DeleteAnalyzerById","parameters":[{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/csv":{"post":{"tags":["common"],"summary":"Connector for importing CSV file data into the system.\n","description":"","operationId":"Csv","parameters":[{"in":"body","schema":{"properties":{"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"HasHeaderRecord":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"Headers":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Path":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"Represents a request which can be sent to CSV connector to index CSV data.\n","default":{"IndexName":"","HasHeaderRecord":false,"Headers":[],"Path":""}},"name":"CsvIndexingRequest","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"String","schema":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}}}}},"/indices/{id}/documents/{id}":{"get":{"tags":["documents"],"summary":"Returns document by ID","description":"","operationId":"GetDocumentById","parameters":[{"name":"id","in":"path","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Document","schema":{"properties":{"Fields":{"properties":{},"required":[],"allOf":[],"description":"Parameters required by the filter.\n","default":{}},"Id":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"TimeStamp":{"properties":{},"required":[],"allOf":[],"description":"","default":0},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Highlights":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Score":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0}},"required":[],"allOf":[],"description":"","default":{"Fields":{},"Id":"","TimeStamp":0,"IndexName":"","Highlights":[],"Score":0}}}}},"put":{"tags":["documents"],"summary":"Create or update a document","description":"It is advisable to use create document endpoint when you are sure that the\ndocument does not exist in an index. This service will always perform an ID\nbased look up to determine if a document already exists. In case of non-unique\nID based index, this will replace all the documents with the currently passed\ndocument. This endpoint can be used with concurrency control semantics.\n","operationId":"PutDocumentById","parameters":[{"in":"body","schema":{"properties":{"Fields":{"properties":{},"required":[],"allOf":[],"description":"Parameters required by the filter.\n","default":{}},"Id":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"TimeStamp":{"properties":{},"required":[],"allOf":[],"description":"","default":0},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Highlights":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Score":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0}},"required":[],"allOf":[],"description":"","default":{"Fields":{},"Id":"","TimeStamp":0,"IndexName":"","Highlights":[],"Score":0}},"name":"Document","required":true},{"name":"id","in":"path","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}},"delete":{"tags":["documents"],"summary":"Delete a document by ID","description":"In case of non-unique ID field, this will delete all the documents associated\nwith that ID.\n","operationId":"DeleteDocumentById","parameters":[{"name":"id","in":"path","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/search":{"get":{"tags":["search"],"summary":"Search and index","description":"Search across the index for documents using SQL like query syntax.\n\n<div class= \"note\">\nAny parameter passed as part of query string takes precedence over the same\nparameter in the request body.\n</div>\n\nRefer to the search DSL section to learn more about FlexSearch's querying capability.\n","operationId":"GetSearch","parameters":[{"name":"q","in":"query","description":"Short hand for 'QueryString'."},{"name":"c","in":"query","description":"Columns to be retrieved. Use * to retrieve all columns."},{"name":"count","in":"query","description":"Count parameter. Refer to 'Search Query' properties."},{"name":"skip","in":"query","description":"Skip parameter. Refer to 'Search Query' properties."},{"name":"orderby","in":"query","description":"Order by parameter. Refer to 'Search Query' properties."},{"name":"orderbydirection","in":"query","description":"Order by Direction parameter. Refer to 'Search Query' properties."},{"name":"returnflatresult","in":"query","description":"Return flat results parameter. Refer to 'Search Query' properties."},{"name":"id","in":"path","description":"Name of the FlexSearch index","required":true}],"responses":{"default":{"description":"Object","schema":{"properties":{},"required":[],"allOf":[]}}}},"post":{"tags":["search"],"summary":"Search and index","description":"Search across the index for documents using SQL like query syntax.\n\n<div class= \"note\">\nAny parameter passed as part of query string takes precedence over the same\nparameter in the request body.\n</div>\n\nRefer to the search DSL section to learn more about FlexSearch's querying capability.\n","operationId":"GetSearch","parameters":[{"in":"body","schema":{"properties":{"QueryName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Columns":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Count":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"Highlights":{"properties":{"FragmentsToReturn":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"HighlightedFields":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"PostTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"PreTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"AUTO\n","default":{"FragmentsToReturn":2,"HighlightedFields":[],"PostTag":"</B>","PreTag":"<B>"}},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OrderBy":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OrderByDirection":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"CutOff":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0},"DistinctBy":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Skip":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"QueryString":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ReturnFlatResult":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ReturnScore":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"SearchProfile":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"SearchProfileScript":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OverrideProfileOptions":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ReturnEmptyStringForNull":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":""},"name":"SearchQuery","required":true},{"name":"id","in":"path","description":"Name of the FlexSearch index","required":true}],"responses":{"default":{"description":"Object","schema":{"properties":{},"required":[],"allOf":[]}}}},"delete":{"tags":["search"],"summary":"Deletes document by query","description":"Deletes all document returned by the search query for the given index. Returns the records identified\nby the search query.","operationId":"DeleteDocumentsFromSearch","parameters":[{"name":"q","in":"query","description":"Short hand for 'QueryString'."},{"name":"count","in":"query","description":"Count parameter. Refer to 'Search Query' properties."},{"name":"skip","in":"query","description":"Skip parameter. Refer to 'Search Query' properties."},{"name":"orderby","in":"query","description":"Order by parameter. Refer to 'Search Query' properties."},{"name":"orderbydirection","in":"query","description":"Order by Direction parameter. Refer to 'Search Query' properties."},{"name":"id","in":"path","description":"Name of the FlexSearch index","required":true}],"responses":{"default":{"description":"Object","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/documents":{"get":{"tags":["documents"],"summary":"Returns top 10 document from the index","description":"This endpoint is useful to determine the structure of the documents indexed. At\ntimes it is quicker to get the count of all the documents present in the index\nusing the service rather then using the search API.\n","operationId":"GetDocuments","parameters":[{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"SearchResults","schema":{"properties":{"Documents":{"properties":{},"required":[],"allOf":[],"description":"memberDocuments which are returned as a part of search response.\n","default":[]},"RecordsReturned":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"TotalAvailable":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0}},"required":[],"allOf":[],"description":"memberRepresents the result returned by FlexSearch for a given search query.\n","default":{"Documents":[],"RecordsReturned":0,"TotalAvailable":0}}}}},"post":{"tags":["documents"],"summary":"Creates a new document","description":"Unlike a database system FlexSearch doesn't impose the requirement of a unique\nID per document. You can add multiple documents by the same ID but this can\nimpose a problem while adding or retrieving them. You can enforce a unique ID\ncheck by using the `timestamp` field. To understand more about ID check and\nconcurrency control, please refer to the article `concurrency control` under\nconcepts section.\n","operationId":"PostDocumentById","parameters":[{"in":"body","schema":{"properties":{"Fields":{"properties":{},"required":[],"allOf":[],"description":"Parameters required by the filter.\n","default":{}},"Id":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"TimeStamp":{"properties":{},"required":[],"allOf":[],"description":"","default":0},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Highlights":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Score":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0}},"required":[],"allOf":[],"description":"","default":{"Fields":{},"Id":"","TimeStamp":0,"IndexName":"","Highlights":[],"Score":0}},"name":"Document","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"CreateResponse","schema":{"properties":{"Id":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"","default":{"Id":""}}}}},"delete":{"tags":["documents"],"summary":"Deletes all documents present in the index","description":"This will remove all the documents present in an index. This is useful when you\nwant to reindex all the documents.\n","operationId":"DeleteDocuments","parameters":[{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}":{"get":{"tags":["indices"],"summary":"Returns an index by the ID","description":"This service will return a status of 404 when index is not present on the server.\n","operationId":"GetIndexById","parameters":[{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Index","schema":{"properties":{"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Fields":{"properties":{},"required":[],"allOf":[],"description":"","default":[]},"SearchProfiles":{"properties":{},"required":[],"allOf":[],"description":"Search Profiles\n","default":[]},"ShardConfiguration":{"properties":{"ShardCount":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0}},"required":[],"allOf":[],"description":"","default":{"ShardCount":1}},"IndexConfiguration":{"properties":{"CommitTimeSeconds":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"CommitEveryNFlushes":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"CommitOnClose":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AutoCommit":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"DirectoryType":{"properties":{},"required":[],"allOf":[],"description":"A Directory is a flat list of files. Files may be written once, when they are \ncreated. Once a file is created it may only be opened for read, or deleted. \nRandom access is permitted both when reading and writing.\n","default":"MemoryMapped"},"DefaultWriteLockTimeout":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"RamBufferSizeMb":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"MaxBufferedDocs":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"RefreshTimeMilliseconds":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"AutoRefresh":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"IndexVersion":{"properties":{},"required":[],"allOf":[],"description":"Corresponds to Lucene Index version. There will always be a default codec \nassociated with each index version.\n","default":"Lucene_5_0_0"},"UseBloomFilterForId":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"DefaultFieldSimilarity":{"properties":{},"required":[],"allOf":[],"description":"AUTO\n","default":"TFIDF"},"AllowReads":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AllowWrites":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"","default":{"CommitTimeSeconds":60,"CommitEveryNFlushes":3,"CommitOnClose":true,"AutoCommit":true,"DirectoryType":"MemoryMapped","DefaultWriteLockTimeout":1000,"RamBufferSizeMb":100,"MaxBufferedDocs":-1,"RefreshTimeMilliseconds":500,"AutoRefresh":true,"IndexVersion":"Lucene_5_0_0","UseBloomFilterForId":true,"DefaultFieldSimilarity":"TFIDF","AllowReads":true,"AllowWrites":true}},"Active":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"FlexSearch index is a logical index built on top of Lucene’s index in a manner \nto support features like schema and sharding. So in this sense a FlexSearch \nindex consists of multiple Lucene’s index. Also, each FlexSearch shard is a memberid \nLucene index.\n\nIn case of a database analogy an index represents a table in a database where \none has to define a schema upfront before performing any kind of operation on \nthe table. There are various properties that can be defined at the index creation \ntime. Only IndexName is a mandatory property, though one should always define \nFields in an index to make any use of it.\n\nBy default a newly created index stays off-line. This is by design to force the \nuser to enable an index before using it.\n","default":{"IndexName":"","Fields":[],"SearchProfiles":[],"ShardConfiguration":{"ShardCount":1},"IndexConfiguration":{"CommitTimeSeconds":60,"CommitEveryNFlushes":3,"CommitOnClose":true,"AutoCommit":true,"DirectoryType":"MemoryMapped","DefaultWriteLockTimeout":1000,"RamBufferSizeMb":100,"MaxBufferedDocs":-1,"RefreshTimeMilliseconds":500,"AutoRefresh":true,"IndexVersion":"Lucene_5_0_0","UseBloomFilterForId":true,"DefaultFieldSimilarity":"TFIDF","AllowReads":true,"AllowWrites":true},"Active":true}}}}},"delete":{"tags":["indices"],"summary":"Deletes an index by ID","description":"Index deletion happens in two parts, first the index configuration file is\ndeleted from the configurations folder, then the index is deleted from the data\nfolder. In case any error is encountered the cleanup will be performed on the\nserver restart.\n","operationId":"DeleteIndexById","parameters":[{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/duplicatedetection/{id}":{"post":{"tags":["common"],"summary":"Duplicate Detection Handler\n","description":"","operationId":"DuplicateDetection","parameters":[{"in":"body","schema":{"properties":{"SelectionQuery":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"FileName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"DisplayName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ThreadCount":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ProfileName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"MaxRecordsToScan":{"properties":{},"required":[],"allOf":[],"description":"","default":32767},"DuplicatesCount":{"properties":{},"required":[],"allOf":[],"description":"","default":32767}},"required":[],"allOf":[],"description":"","default":{"SelectionQuery":"","FileName":"","DisplayName":"","ThreadCount":1,"IndexName":"","ProfileName":"","MaxRecordsToScan":32767,"DuplicatesCount":32767}},"name":"DuplicateDetectionRequest","required":true},{"name":"id","in":"path","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Guid","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/analyzers":{"get":{"tags":["analyzer"],"summary":"Returns all analysers","description":"","operationId":"GetAllAnalyzer","responses":{"default":{"description":"Analyzer[]","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices":{"get":{"tags":["indices"],"summary":"Returns all the indexes","description":"","operationId":"GetAllIndex","responses":{"default":{"description":"Index[]","schema":{"properties":{},"required":[],"allOf":[]}}}},"post":{"tags":["common"],"summary":"Create a new index","description":"","operationId":"PostIndexById","parameters":[{"in":"body","schema":{"properties":{"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Fields":{"properties":{},"required":[],"allOf":[],"description":"","default":[]},"SearchProfiles":{"properties":{},"required":[],"allOf":[],"description":"Search Profiles\n","default":[]},"ShardConfiguration":{"properties":{"ShardCount":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0}},"required":[],"allOf":[],"description":"","default":{"ShardCount":1}},"IndexConfiguration":{"properties":{"CommitTimeSeconds":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"CommitEveryNFlushes":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"CommitOnClose":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AutoCommit":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"DirectoryType":{"properties":{},"required":[],"allOf":[],"description":"A Directory is a flat list of files. Files may be written once, when they are \ncreated. Once a file is created it may only be opened for read, or deleted. \nRandom access is permitted both when reading and writing.\n","default":"MemoryMapped"},"DefaultWriteLockTimeout":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"RamBufferSizeMb":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"MaxBufferedDocs":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"RefreshTimeMilliseconds":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"AutoRefresh":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"IndexVersion":{"properties":{},"required":[],"allOf":[],"description":"Corresponds to Lucene Index version. There will always be a default codec \nassociated with each index version.\n","default":"Lucene_5_0_0"},"UseBloomFilterForId":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"DefaultFieldSimilarity":{"properties":{},"required":[],"allOf":[],"description":"AUTO\n","default":"TFIDF"},"AllowReads":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AllowWrites":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"","default":{"CommitTimeSeconds":60,"CommitEveryNFlushes":3,"CommitOnClose":true,"AutoCommit":true,"DirectoryType":"MemoryMapped","DefaultWriteLockTimeout":1000,"RamBufferSizeMb":100,"MaxBufferedDocs":-1,"RefreshTimeMilliseconds":500,"AutoRefresh":true,"IndexVersion":"Lucene_5_0_0","UseBloomFilterForId":true,"DefaultFieldSimilarity":"TFIDF","AllowReads":true,"AllowWrites":true}},"Active":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"FlexSearch index is a logical index built on top of Lucene’s index in a manner \nto support features like schema and sharding. So in this sense a FlexSearch \nindex consists of multiple Lucene’s index. Also, each FlexSearch shard is a memberid \nLucene index.\n\nIn case of a database analogy an index represents a table in a database where \none has to define a schema upfront before performing any kind of operation on \nthe table. There are various properties that can be defined at the index creation \ntime. Only IndexName is a mandatory property, though one should always define \nFields in an index to make any use of it.\n\nBy default a newly created index stays off-line. This is by design to force the \nuser to enable an index before using it.\n","default":{"IndexName":"","Fields":[],"SearchProfiles":[],"ShardConfiguration":{"ShardCount":1},"IndexConfiguration":{"CommitTimeSeconds":60,"CommitEveryNFlushes":3,"CommitOnClose":true,"AutoCommit":true,"DirectoryType":"MemoryMapped","DefaultWriteLockTimeout":1000,"RamBufferSizeMb":100,"MaxBufferedDocs":-1,"RefreshTimeMilliseconds":500,"AutoRefresh":true,"IndexVersion":"Lucene_5_0_0","UseBloomFilterForId":true,"DefaultFieldSimilarity":"TFIDF","AllowReads":true,"AllowWrites":true},"Active":true}},"name":"Index","required":true}],"responses":{"default":{"description":"CreateResponse","schema":{"properties":{"Id":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"","default":{"Id":""}}}}}},"/indices/{id}/exists":{"get":{"tags":["indices"],"summary":"Check if an index exists","description":"This endpoint can be used to check if an index is present in the system. This\nendpoint is a lighter alternative to accessing the index by an ID as the\nresponse is smaller in size.\n","operationId":"GetExists","parameters":[{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"IndexExistsResponse","schema":{"properties":{"Exists":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"","default":{"Exists":false}}}}}},"/favicon.ico":{"get":{"tags":["server"],"summary":"Returns favourite icon","description":"An internal end point which is used to return favourite icon when it is\nrequested by a web browser.\n","operationId":"GetFavicon","responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/size":{"get":{"tags":["indices"],"summary":"Returns the size of an index","description":"The return size may be higher than the actual size of the documents present in\nthe index. The return value includes the space occupied by the transaction logs\nand older segment files which are not cleaned up as part of the last comment.\n","operationId":"GetIndexSize","parameters":[{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Int64","schema":{"properties":{},"required":[],"allOf":[],"description":"","default":0}}}}},"/jobs/{id}":{"get":{"tags":["jobs"],"summary":"Returns job information","description":"","operationId":"GetJobById","parameters":[{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Job","schema":{"properties":{"JobId":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"TotalItems":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"ProcessedItems":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"FailedItems":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"Status":{"properties":{},"required":[],"allOf":[],"description":"memberOverall status of the job.\n","default":"Initializing"},"Message":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"memberUsed by long running processes. All long running FlexSearch operations create\nmemberan instance of Job and return the Id to the caller. This Id can be used by the\nmembercaller to check the status of the job.\n///\nmemberNOTE: Job information is not persistent\n","default":{"JobId":"","TotalItems":0,"ProcessedItems":0,"FailedItems":0,"Status":"Initializing","Message":""}}}}}},"/memory":{"get":{"tags":["server"],"summary":"Returns memory used by the server","description":"","operationId":"GetMemoryDetails","responses":{"default":{"description":"MemoryDetailsResponse","schema":{"properties":{"UsedMemory":{"properties":{},"required":[],"allOf":[],"description":"","default":0},"TotalMemory":{"properties":{},"required":[],"allOf":[],"description":"","default":0},"Usage":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0}},"required":[],"allOf":[],"description":"","default":{"UsedMemory":0,"TotalMemory":0,"Usage":0}}}}}},"/":{"get":{"tags":["server"],"summary":"Redirect requests from base URL","description":"An internal endpoint which is used to redirect requests to the root URL to the\nFlexSearch portal.\n","operationId":"GetRoot","responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/status":{"get":{"tags":["indices"],"summary":"Returns the status of an index","description":"This endpoint can be used to determine if an index is online or off-line.\n","operationId":"GetStatus","parameters":[{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"IndexStatusResponse","schema":{"properties":{"Status":{"properties":{},"required":[],"allOf":[],"description":"","default":"Undefined"}},"required":[],"allOf":[],"description":"","default":{"Status":"Undefined"}}}}}},"/ping":{"get":{"tags":["server"],"summary":"Ping server","description":"A simple endpoint which can be used to check the server is running. This is\nuseful for checking the status of the server from a load balancer or fire-wall.\n","operationId":"Ping","responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/searchprofiletest":{"post":{"tags":["search"],"summary":"Test a search profile","description":"This endpoint is useful to test such profiles dynamically, you can test search\nprofiles without adding them to the index. This becomes useful when trying out\ndifferent search profiles. It is advisable to not to use this service directly\nbut through the search UI provided as part of the portal.\n","operationId":"PostSearchProfileTest","parameters":[{"in":"body","schema":{"properties":{"SearchQuery":{"properties":{"QueryName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Columns":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Count":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"Highlights":{"properties":{"FragmentsToReturn":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"HighlightedFields":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"PostTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"PreTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"AUTO\n","default":{"FragmentsToReturn":2,"HighlightedFields":[],"PostTag":"</B>","PreTag":"<B>"}},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OrderBy":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OrderByDirection":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"CutOff":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0},"DistinctBy":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Skip":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"QueryString":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ReturnFlatResult":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ReturnScore":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"SearchProfile":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"SearchProfileScript":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OverrideProfileOptions":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ReturnEmptyStringForNull":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":""},"SearchProfile":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"","default":{"SearchProfile":""}},"name":"SearchProfileTestDto","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Object","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/configuration":{"put":{"tags":["indices"],"summary":"Update the configuration of an index","description":"<div class=\"important\">\nThe Index Version cannot be modified\n</div>\n","operationId":"PutIndexConfiguration","parameters":[{"in":"body","schema":{"properties":{"CommitTimeSeconds":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"CommitEveryNFlushes":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"CommitOnClose":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AutoCommit":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"DirectoryType":{"properties":{},"required":[],"allOf":[],"description":"A Directory is a flat list of files. Files may be written once, when they are \ncreated. Once a file is created it may only be opened for read, or deleted. \nRandom access is permitted both when reading and writing.\n","default":"MemoryMapped"},"DefaultWriteLockTimeout":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"RamBufferSizeMb":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"MaxBufferedDocs":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"RefreshTimeMilliseconds":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"AutoRefresh":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"IndexVersion":{"properties":{},"required":[],"allOf":[],"description":"Corresponds to Lucene Index version. There will always be a default codec \nassociated with each index version.\n","default":"Lucene_5_0_0"},"UseBloomFilterForId":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"DefaultFieldSimilarity":{"properties":{},"required":[],"allOf":[],"description":"AUTO\n","default":"TFIDF"},"AllowReads":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AllowWrites":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"","default":{"CommitTimeSeconds":60,"CommitEveryNFlushes":3,"CommitOnClose":true,"AutoCommit":true,"DirectoryType":"MemoryMapped","DefaultWriteLockTimeout":1000,"RamBufferSizeMb":100,"MaxBufferedDocs":-1,"RefreshTimeMilliseconds":500,"AutoRefresh":true,"IndexVersion":"Lucene_5_0_0","UseBloomFilterForId":true,"DefaultFieldSimilarity":"TFIDF","AllowReads":true,"AllowWrites":true}},"name":"IndexConfiguration","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/fields":{"put":{"tags":["indices"],"summary":"Update the Index Fields","description":"Any analyser which is to be used as part of an index field should be defined\nbefore adding the field to the index.\n\n<div class=\"note\">\nAlways reindex the data after a field update, otherwise you may get unexpected\nresults.\n</div>\n\n<div class=\"important\">\nNew fields added as part of fields update will not have any data available for\nthe older records, in such cases if the indexing is not done the engine will use\ndefault values for the field type. If an existing field is removed then the data\nassociated with that field will not be accessible even though the data will not\nbe removed from the index itself.\n</div>\n","operationId":"PutIndexFields","parameters":[{"in":"body","schema":{"properties":{"Fields":{"properties":{},"required":[],"allOf":[],"description":"","default":[]}},"required":[],"allOf":[],"description":"Container to store the list of fields to be updated\n","default":{"Fields":[]}},"name":"FieldsUpdateRequest","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/searchprofile":{"put":{"tags":["indices"],"summary":"Adds or updates a search profile for the given index","description":"","operationId":"PutIndexSearchProfile","parameters":[{"in":"body","schema":{"properties":{"QueryName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Columns":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Count":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"Highlights":{"properties":{"FragmentsToReturn":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"HighlightedFields":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"PostTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"PreTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"AUTO\n","default":{"FragmentsToReturn":2,"HighlightedFields":[],"PostTag":"</B>","PreTag":"<B>"}},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OrderBy":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OrderByDirection":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"CutOff":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0},"DistinctBy":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Skip":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"QueryString":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ReturnFlatResult":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ReturnScore":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"SearchProfile":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"SearchProfileScript":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OverrideProfileOptions":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ReturnEmptyStringForNull":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":""},"name":"SearchQuery","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/status/{id}":{"put":{"tags":["indices"],"summary":"Update the status of an index","description":"This endpoint can be used to set an index online or off-line.\n","operationId":"PutStatus","parameters":[{"in":"body","schema":{"properties":{},"required":[],"allOf":[],"description":"","default":{}},"name":"NoBody","required":true},{"name":"id","in":"path","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/setupdemo":{"put":{"tags":["server"],"summary":"Setup a demo index","description":"This endpoint if useful for setting up a demo index which can be used to explore\nthe capabilities of FlexSearch. This is an in memory index which gets wiped out\non server restart.\n","operationId":"SetupDemo","parameters":[{"in":"body","schema":{"properties":{},"required":[],"allOf":[],"description":"","default":{}},"name":"NoBody","required":true}],"responses":{"default":{"description":"Unit","schema":{"properties":{},"required":[],"allOf":[]}}}}},"/indices/{id}/sql":{"post":{"tags":["common"],"summary":"Connector for importing data from Microsoft SQL into the system.\n","description":"","operationId":"Sql","parameters":[{"in":"body","schema":{"properties":{"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Query":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ConnectionString":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ForceCreate":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"CreateJob":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"Represents a request which can be sent to Sql connector to index SQL data\n","default":{"IndexName":"","Query":"","ConnectionString":"","ForceCreate":true,"CreateJob":false}},"name":"SqlIndexingRequest","required":true},{"name":"id","in":"path","required":true}],"responses":{"default":{"description":"String","schema":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}}}}}},"definitions":{"AnalysisRequest":{"properties":{"Text":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"memberRequest to analyze a text against an analyzer. The reason to force\nmemberthis parameter to request body is to avoid escaping of restricted characters\nmemberin the uri.\nmemberThis is helpful during analyzer testing.\n","default":{"Text":""}},"Analyzer":{"properties":{"AnalyzerName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Tokenizer":{"properties":{"TokenizerName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Parameters":{"properties":{},"required":[],"allOf":[],"description":"Parameters required by the filter.\n","default":{}}},"required":[],"allOf":[],"description":"","default":{"TokenizerName":"standard","Parameters":{}}},"Filters":{"properties":{},"required":[],"allOf":[],"description":"memberDocuments which are returned as a part of search response.\n","default":[]}},"required":[],"allOf":[],"description":"An analyzer examines the text of fields and generates a token stream.\n","default":{"AnalyzerName":"","Tokenizer":{"TokenizerName":"standard","Parameters":{}},"Filters":[]}},"CreateResponse":{"properties":{"Id":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"","default":{"Id":""}},"CsvIndexingRequest":{"properties":{"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"HasHeaderRecord":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"Headers":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Path":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"Represents a request which can be sent to CSV connector to index CSV data.\n","default":{"IndexName":"","HasHeaderRecord":false,"Headers":[],"Path":""}},"Document":{"properties":{"Fields":{"properties":{},"required":[],"allOf":[],"description":"Parameters required by the filter.\n","default":{}},"Id":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"TimeStamp":{"properties":{},"required":[],"allOf":[],"description":"","default":0},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Highlights":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Score":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0}},"required":[],"allOf":[],"description":"","default":{"Fields":{},"Id":"","TimeStamp":0,"IndexName":"","Highlights":[],"Score":0}},"DuplicateDetectionRequest":{"properties":{"SelectionQuery":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"FileName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"DisplayName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ThreadCount":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ProfileName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"MaxRecordsToScan":{"properties":{},"required":[],"allOf":[],"description":"","default":32767},"DuplicatesCount":{"properties":{},"required":[],"allOf":[],"description":"","default":32767}},"required":[],"allOf":[],"description":"","default":{"SelectionQuery":"","FileName":"","DisplayName":"","ThreadCount":1,"IndexName":"","ProfileName":"","MaxRecordsToScan":32767,"DuplicatesCount":32767}},"Field":{"properties":{"FieldName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Analyze":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"Index":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"Store":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AllowSort":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"IndexAnalyzer":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"SearchAnalyzer":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"FieldType":{"properties":{},"required":[],"allOf":[],"description":"AUTO\n","default":"Text"},"Similarity":{"properties":{},"required":[],"allOf":[],"description":"AUTO\n","default":"TFIDF"},"IndexOptions":{"properties":{},"required":[],"allOf":[],"description":"AUTO\n","default":"DocsAndFreqsAndPositions"},"TermVector":{"properties":{},"required":[],"allOf":[],"description":"AUTO\n","default":"DoNotStoreTermVector"},"OmitNorms":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ScriptName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"A field is a section of a Document. \n\nFields can contain different kinds of data. A name field, for example, \nis text (character data). A shoe size field might be a floating point number \nso that it could contain memberues like 6 and 9.5. Obviously, the definition of \nfields is flexible (you could define a shoe size field as a text field rather\nthan a floating point number, for example), but if you define your fields correctly, \nFlexSearch will be able to interpret them correctly and your users will get better \nresults when they perform a query.\n\nYou can tell FlexSearch about the kind of data a field contains by specifying its \nfield type. The field type tells FlexSearch how to interpret the field and how \nit can be queried. When you add a document, FlexSearch takes the information in \nthe document’s fields and adds that information to an index. When you perform a \nquery, FlexSearch can quickly consult the index and return the matching documents.\n","default":{"FieldName":"","Analyze":true,"Index":true,"Store":true,"AllowSort":false,"IndexAnalyzer":"standard","SearchAnalyzer":"standard","FieldType":"Text","Similarity":"TFIDF","IndexOptions":"DocsAndFreqsAndPositions","TermVector":"DoNotStoreTermVector","OmitNorms":true,"ScriptName":""}},"FieldsUpdateRequest":{"properties":{"Fields":{"properties":{},"required":[],"allOf":[],"description":"","default":[]}},"required":[],"allOf":[],"description":"Container to store the list of fields to be updated\n","default":{"Fields":[]}},"HighlightOption":{"properties":{"FragmentsToReturn":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"HighlightedFields":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"PostTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"PreTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"AUTO\n","default":{"FragmentsToReturn":2,"HighlightedFields":[],"PostTag":"</B>","PreTag":"<B>"}},"Index":{"properties":{"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Fields":{"properties":{},"required":[],"allOf":[],"description":"","default":[]},"SearchProfiles":{"properties":{},"required":[],"allOf":[],"description":"Search Profiles\n","default":[]},"ShardConfiguration":{"properties":{"ShardCount":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0}},"required":[],"allOf":[],"description":"","default":{"ShardCount":1}},"IndexConfiguration":{"properties":{"CommitTimeSeconds":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"CommitEveryNFlushes":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"CommitOnClose":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AutoCommit":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"DirectoryType":{"properties":{},"required":[],"allOf":[],"description":"A Directory is a flat list of files. Files may be written once, when they are \ncreated. Once a file is created it may only be opened for read, or deleted. \nRandom access is permitted both when reading and writing.\n","default":"MemoryMapped"},"DefaultWriteLockTimeout":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"RamBufferSizeMb":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"MaxBufferedDocs":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"RefreshTimeMilliseconds":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"AutoRefresh":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"IndexVersion":{"properties":{},"required":[],"allOf":[],"description":"Corresponds to Lucene Index version. There will always be a default codec \nassociated with each index version.\n","default":"Lucene_5_0_0"},"UseBloomFilterForId":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"DefaultFieldSimilarity":{"properties":{},"required":[],"allOf":[],"description":"AUTO\n","default":"TFIDF"},"AllowReads":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AllowWrites":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"","default":{"CommitTimeSeconds":60,"CommitEveryNFlushes":3,"CommitOnClose":true,"AutoCommit":true,"DirectoryType":"MemoryMapped","DefaultWriteLockTimeout":1000,"RamBufferSizeMb":100,"MaxBufferedDocs":-1,"RefreshTimeMilliseconds":500,"AutoRefresh":true,"IndexVersion":"Lucene_5_0_0","UseBloomFilterForId":true,"DefaultFieldSimilarity":"TFIDF","AllowReads":true,"AllowWrites":true}},"Active":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"FlexSearch index is a logical index built on top of Lucene’s index in a manner \nto support features like schema and sharding. So in this sense a FlexSearch \nindex consists of multiple Lucene’s index. Also, each FlexSearch shard is a memberid \nLucene index.\n\nIn case of a database analogy an index represents a table in a database where \none has to define a schema upfront before performing any kind of operation on \nthe table. There are various properties that can be defined at the index creation \ntime. Only IndexName is a mandatory property, though one should always define \nFields in an index to make any use of it.\n\nBy default a newly created index stays off-line. This is by design to force the \nuser to enable an index before using it.\n","default":{"IndexName":"","Fields":[],"SearchProfiles":[],"ShardConfiguration":{"ShardCount":1},"IndexConfiguration":{"CommitTimeSeconds":60,"CommitEveryNFlushes":3,"CommitOnClose":true,"AutoCommit":true,"DirectoryType":"MemoryMapped","DefaultWriteLockTimeout":1000,"RamBufferSizeMb":100,"MaxBufferedDocs":-1,"RefreshTimeMilliseconds":500,"AutoRefresh":true,"IndexVersion":"Lucene_5_0_0","UseBloomFilterForId":true,"DefaultFieldSimilarity":"TFIDF","AllowReads":true,"AllowWrites":true},"Active":true}},"IndexConfiguration":{"properties":{"CommitTimeSeconds":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"CommitEveryNFlushes":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"CommitOnClose":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AutoCommit":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"DirectoryType":{"properties":{},"required":[],"allOf":[],"description":"A Directory is a flat list of files. Files may be written once, when they are \ncreated. Once a file is created it may only be opened for read, or deleted. \nRandom access is permitted both when reading and writing.\n","default":"MemoryMapped"},"DefaultWriteLockTimeout":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"RamBufferSizeMb":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"MaxBufferedDocs":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"RefreshTimeMilliseconds":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"AutoRefresh":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"IndexVersion":{"properties":{},"required":[],"allOf":[],"description":"Corresponds to Lucene Index version. There will always be a default codec \nassociated with each index version.\n","default":"Lucene_5_0_0"},"UseBloomFilterForId":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"DefaultFieldSimilarity":{"properties":{},"required":[],"allOf":[],"description":"AUTO\n","default":"TFIDF"},"AllowReads":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"AllowWrites":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"","default":{"CommitTimeSeconds":60,"CommitEveryNFlushes":3,"CommitOnClose":true,"AutoCommit":true,"DirectoryType":"MemoryMapped","DefaultWriteLockTimeout":1000,"RamBufferSizeMb":100,"MaxBufferedDocs":-1,"RefreshTimeMilliseconds":500,"AutoRefresh":true,"IndexVersion":"Lucene_5_0_0","UseBloomFilterForId":true,"DefaultFieldSimilarity":"TFIDF","AllowReads":true,"AllowWrites":true}},"IndexExistsResponse":{"properties":{"Exists":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"","default":{"Exists":false}},"IndexStatusResponse":{"properties":{"Status":{"properties":{},"required":[],"allOf":[],"description":"","default":"Undefined"}},"required":[],"allOf":[],"description":"","default":{"Status":"Undefined"}},"Job":{"properties":{"JobId":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"TotalItems":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"ProcessedItems":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"FailedItems":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"Status":{"properties":{},"required":[],"allOf":[],"description":"memberOverall status of the job.\n","default":"Initializing"},"Message":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"memberUsed by long running processes. All long running FlexSearch operations create\nmemberan instance of Job and return the Id to the caller. This Id can be used by the\nmembercaller to check the status of the job.\n///\nmemberNOTE: Job information is not persistent\n","default":{"JobId":"","TotalItems":0,"ProcessedItems":0,"FailedItems":0,"Status":"Initializing","Message":""}},"MemoryDetailsResponse":{"properties":{"UsedMemory":{"properties":{},"required":[],"allOf":[],"description":"","default":0},"TotalMemory":{"properties":{},"required":[],"allOf":[],"description":"","default":0},"Usage":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0}},"required":[],"allOf":[],"description":"","default":{"UsedMemory":0,"TotalMemory":0,"Usage":0}},"NoBody":{"properties":{},"required":[],"allOf":[],"description":"","default":{}},"SearchProfileTestDto":{"properties":{"SearchQuery":{"properties":{"QueryName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Columns":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Count":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"Highlights":{"properties":{"FragmentsToReturn":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"HighlightedFields":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"PostTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"PreTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"AUTO\n","default":{"FragmentsToReturn":2,"HighlightedFields":[],"PostTag":"</B>","PreTag":"<B>"}},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OrderBy":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OrderByDirection":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"CutOff":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0},"DistinctBy":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Skip":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"QueryString":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ReturnFlatResult":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ReturnScore":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"SearchProfile":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"SearchProfileScript":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OverrideProfileOptions":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ReturnEmptyStringForNull":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":""},"SearchProfile":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"","default":{"SearchProfile":""}},"SearchQuery":{"properties":{"QueryName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Columns":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"Count":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"Highlights":{"properties":{"FragmentsToReturn":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"HighlightedFields":{"properties":{},"required":[],"allOf":[],"description":"Columns to be returned as part of results.\n+ *  - return all columns\n+ [] - return no columns\n+ [\"columnName\"] -  return specific column\n","default":[]},"PostTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"PreTag":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""}},"required":[],"allOf":[],"description":"AUTO\n","default":{"FragmentsToReturn":2,"HighlightedFields":[],"PostTag":"</B>","PreTag":"<B>"}},"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OrderBy":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OrderByDirection":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"CutOff":{"properties":{},"required":[],"allOf":[],"description":"Can be used to remove results lower than a certain threshold.\nThis works in conjunction with the score of the top record as\nall the other records are filtered using the score set by the\ntop scoring record.\n","default":0},"DistinctBy":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Skip":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"QueryString":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ReturnFlatResult":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ReturnScore":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"SearchProfile":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"SearchProfileScript":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"OverrideProfileOptions":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"ReturnEmptyStringForNull":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":""},"SearchResults":{"properties":{"Documents":{"properties":{},"required":[],"allOf":[],"description":"memberDocuments which are returned as a part of search response.\n","default":[]},"RecordsReturned":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0},"TotalAvailable":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0}},"required":[],"allOf":[],"description":"memberRepresents the result returned by FlexSearch for a given search query.\n","default":{"Documents":[],"RecordsReturned":0,"TotalAvailable":0}},"ShardConfiguration":{"properties":{"ShardCount":{"properties":{},"required":[],"allOf":[],"description":"Used to enable paging and skip certain pre-fetched results.\n","default":0}},"required":[],"allOf":[],"description":"","default":{"ShardCount":1}},"SqlIndexingRequest":{"properties":{"IndexName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Query":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ConnectionString":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"ForceCreate":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true},"CreateJob":{"properties":{},"required":[],"allOf":[],"description":"If true, omits the norms associated with this field (this disables length \nnormalization and index-time boosting for the field, and saves some memory). \nDefaults to true for all primitive (non-analyzed) field types, such as int, \nfloat, data, bool, and string. Only full-text fields or fields that need an \nindex-time boost need norms.\n","default":true}},"required":[],"allOf":[],"description":"Represents a request which can be sent to Sql connector to index SQL data\n","default":{"IndexName":"","Query":"","ConnectionString":"","ForceCreate":true,"CreateJob":false}},"TokenFilter":{"properties":{"FilterName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Parameters":{"properties":{},"required":[],"allOf":[],"description":"Parameters required by the filter.\n","default":{}}},"required":[],"allOf":[],"description":"Filters consume input and produce a stream of tokens. In most cases a filter looks \nat each token in the stream sequentially and decides whether to pass it along, \nreplace it or discard it. A filter may also do more complex analysis by looking \nahead to consider multiple tokens at once, although this is less common. \n","default":{"FilterName":"","Parameters":{}}},"Tokenizer":{"properties":{"TokenizerName":{"properties":{},"required":[],"allOf":[],"description":"The name of the filter. Some pre-defined filters are the following-\n+ Ascii Folding Filter\n+ Standard Filter\n+ Beider Morse Filter\n+ Double Metaphone Filter\n+ Caverphone2 Filter\n+ Metaphone Filter\n+ Refined Soundex Filter\n+ Soundex Filter\nFor more details refer to http://flexsearch.net/docs/concepts/understanding-analyzers-tokenizers-and-filters/\n","default":""},"Parameters":{"properties":{},"required":[],"allOf":[],"description":"Parameters required by the filter.\n","default":{}}},"required":[],"allOf":[],"description":"","default":{"TokenizerName":"standard","Parameters":{}}},"DirectoryType":{"properties":{"DirectoryType":{"type":"string","enum":["Undefined","FileSystem","MemoryMapped","Ram"]}},"description":"A Directory is a flat list of files. Files may be written once, when they are \ncreated. Once a file is created it may only be opened for read, or deleted. \nRandom access is permitted both when reading and writing.\n"},"FieldDataType":{"properties":{"FieldDataType":{"type":"string","enum":["Undefined","Int","Double","ExactText","Text","Highlight","Bool","Date","DateTime","Custom","Stored","Long"]}},"description":"The field type defines how FlexSearch should interpret data in a field and how \nthe field can be queried. There are many field types included with FlexSearch \nby default and custom types can also be defined.\n"},"FieldIndexOptions":{"properties":{"FieldIndexOptions":{"type":"string","enum":["Undefined","DocsOnly","DocsAndFreqs","DocsAndFreqsAndPositions","DocsAndFreqsAndPositionsAndOffsets"]}},"description":"Controls how much information is stored in the postings lists.\n"},"FieldSimilarity":{"properties":{"FieldSimilarity":{"type":"string","enum":["Undefined","BM25","TFIDF"]}},"description":"Similarity defines the components of Lucene scoring. Similarity determines how \nLucene weights terms, and Lucene interacts with Similarity at both index-time \nand query-time.\n"},"FieldTermVector":{"properties":{"FieldTermVector":{"type":"string","enum":["Undefined","DoNotStoreTermVector","StoreTermVector","StoreTermVectorsWithPositions","StoreTermVectorsWithPositionsandOffsets"]}},"description":"These options instruct FlexSearch to maintain full term vectors for each document, \noptionally including the position and offset information for each term occurrence \nin those vectors. These can be used to accelerate highlighting and other ancillary \nfunctionality, but impose a substantial cost in terms of index size. These can \nonly be configured for custom field type.\n"},"IndexStatus":{"properties":{"IndexStatus":{"type":"string","enum":["Undefined","Opening","Recovering","Online","OnlineFollower","Offline","Closing","Faulted"]}},"description":"Represents the current state of the index.\n"},"IndexVersion":{"properties":{"IndexVersion":{"type":"string","enum":["Undefined","Lucene_4_x_x","Lucene_5_0_0"]}},"description":"Corresponds to Lucene Index version. There will always be a default codec \nassociated with each index version.\n"},"JobStatus":{"properties":{"JobStatus":{"type":"string","enum":["Undefined","Initializing","Initialized","InProgress","Completed","CompletedWithErrors"]}},"description":"Represents the status of job.\n"},"ShardStatus":{"properties":{"ShardStatus":{"type":"string","enum":["Undefined","Opening","Recovering","Online","Offline","Closing","Faulted"]}},"description":"Signifies Shard status\n"}},"tags":[{"name":"All"},{"name":"analyzer"},{"name":"common"},{"name":"documents"},{"name":"search"},{"name":"indices"},{"name":"server"},{"name":"jobs"}]}